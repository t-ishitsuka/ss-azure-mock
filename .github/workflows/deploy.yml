name: Build and Deploy to Azure Container Registry

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  REGISTRY_NAME: ssazurestagingacr
  IMAGE_NAME: ss-azure-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./app
        file: ./app/Dockerfile.production
        push: true
        tags: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        platforms: linux/amd64

    - name: Update Container Instance
      run: |
        # Container Instances を新しいイメージで再作成（VNet内でも動作）
        az container create \
          --resource-group ss-azure-staging-rg \
          --name ss-azure-staging-container \
          --image ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --registry-login-server ${{ env.REGISTRY_NAME }}.azurecr.io \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --cpu 1 \
          --memory 1.5 \
          --restart-policy Always \
          --environment-variables \
            NODE_ENV=production \
            PORT=8080 \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
          --location japaneast \
          --no-wait \
          || echo "Container update initiated"
      continue-on-error: true